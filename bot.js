const TeleBot = require('telebot');
const Api = require("./utils/api");
const apiMovie = new Api();
const fetch = require("node-fetch");

const ngrok = require('ngrok');
const mongoose = require("mongoose");
const UserSchema = require("./database/schema/User");
 require("dotenv").config();
 console.log(apiMovie.filmSearch)
 const bot = new TeleBot({
    token:process.env.TELEGRAM_BOT_TOKEN,
    usePlugins:["commandButton"]
});
 mongoose.connect('mongodb://localhost:27017/telegrambot');
 const yearArray = ["2002","2003"];
 const filter = {
     country:{
         id:"",
         country:""
     },
     genre:{
         id:"",
         genre:""
     },
     actor:"",
     director:"",
     release:""
 }
 const previousBotMessage = new Map();
 const pagginatorForCollection = new Map();
 const paginatorInformation = [ [
    [
        bot.inlineButton('‚ù§Ô∏è –õ—é–±–æ–≤—å', {callback: '/hello'}),bot.inlineButton("üßõ‚Äç‚ôÄÔ∏è –•–∏–ø–ø–∏", {callback: '/hello'})
    ],
    [
        bot.inlineButton('üßõ‚Äç‚ôÄÔ∏è –í–∞–º–ø–∏—Ä—ã', {callback: '/hello'}),bot.inlineButton("üßü –ó–æ–º–±–∏", {callback: '/hello'})
    ],
    [
        bot.inlineButton('üå™ –ö–∞—Ç–∞—Å—Ç—Ä–æ—Ñ—ã', {callback: '/hello'}),bot.inlineButton("üåë –ö–æ–Ω–µ—Ü —Å–≤–µ—Ç–∞", {callback: '/hello'})
    ],
    [
        bot.inlineButton('ü§† –í–µ—Å—Ç–µ—Ä–Ω—ã', {callback: '/hello'}),bot.inlineButton("üëÑ –°–∞–º—ã–µ —Å–µ–∫—Å—É–∞–ª—å–Ω—ã–µ", {callback: '/hello'})
    ],
    [
        bot.inlineButton('üíÉ –¢–∞–Ω—Ü—ã', {callback: '/hello'}),bot.inlineButton("üéº –ú—É–∑—ã–∫–∞–ª—å–Ω—ã–µ", {callback: '/hello'})
    ],
    [
        bot.inlineButton('üê≤ –î—Ä–∞–∫–æ–Ω—ã', {callback: '/hello'}),bot.inlineButton("ü¶ï –î–∏–Ω–æ–∑–∞–≤—Ä—ã", {callback: '/hello'})
    ],
    [
        bot.inlineButton('üê∂ –ñ–∏–≤–æ—Ç–Ω—ã–µ', {callback: '/hello'}),bot.inlineButton("ü¶à –ê–∫—É–ª—ã", {callback: '/hello'})
    ],
    [
        bot.inlineButton('üöò –ê–≤—Ç–æ–º–æ–±–∏–ª–∏', {callback: '/hello'}),bot.inlineButton("üõµ –ú–æ—Ç–æ—Ü–∏–∫–ª—ã", {callback: '/hello'})
    ],
    [
        bot.inlineButton('‚õ∫Ô∏è –ü—É—Ç–µ—à–µ—Å—Ç–≤–∏—è –∏ —Ç—É—Ä–∏–∑–º', {callback: '/hello'}),bot.inlineButton("üíû –†–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–µ –∫–æ–º–µ–¥–∏–∏", {callback: '/hello'})
    ],
    [
        bot.inlineButton('‚öΩÔ∏è –§—É—Ç–±–æ–ª', {callback: '/hello'}),bot.inlineButton("üèà –†–µ–≥–±–∏", {callback: '/hello'})
    ],
    [
        bot.inlineButton('‚û°Ô∏è', {callback: '/plus'})
    ],
],
[
    [
        bot.inlineButton('‚öæÔ∏è –ë–µ–π—Å–±–æ–ª', {callback: '/hello'}),bot.inlineButton("üèÄ –ë–∞—Å–∫–µ—Ç–±–æ–ª", {callback: '/hello'})
    ],
    [
        bot.inlineButton('üèÇ –°–Ω–æ—É–±–æ—Ä–¥', {callback: '/hello'}),bot.inlineButton("üèÑ‚Äç‚ôÄÔ∏è –°—ë—Ä—Ñ–∏–Ω–≥", {callback: '/hello'})
    ],
    [
        bot.inlineButton('üéæ –¢–µ–Ω–∏—Å', {callback: '/hello'}),bot.inlineButton("üèÉüèª‚Äç‚ôÄÔ∏è –ö–æ–Ω–µ—Ü —Å–≤–µ—Ç–∞", {callback: '/hello'})
    ],
    [
        bot.inlineButton('ü§º‚Äç‚ôÄÔ∏è –ï–¥–∏–Ω–æ–±–æ—Ä—Å—Ç–≤–∞', {callback: '/hello'}),bot.inlineButton("ü•ä –ë–æ–∫—Å", {callback: '/hello'})
    ],
    [
        bot.inlineButton('üèí –•–æ–∫–∫–µ–π', {callback: '/hello'}),bot.inlineButton("ü§∏‚Äç‚ôÄÔ∏è –ì–∏–º–Ω–∞—Å—Ç–∏–∫–∞", {callback: '/hello'})
    ],
    [
        bot.inlineButton('üè¥‚Äç‚ò†Ô∏è –ü–∏—Ä–∞—Ç—ã', {callback: '/hello'}),bot.inlineButton("üë∫ –î–∏–∫–∏–µ –ø–ª–µ–º–µ–Ω–∞", {callback: '/hello'})
    ],
    [
        bot.inlineButton('üë©üèª‚ÄçüöÄ –í–µ–ª–∏–∫–∏–µ –ª–∏—á–Ω–æ—Å—Ç–∏', {callback: '/hello'}),bot.inlineButton("üéØ –ú–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω—ã–µ", {callback: '/hello'})
    ],
    [
        bot.inlineButton('ü§ñ –†–æ–±–æ—Ç—ã', {callback: '/hello'}),bot.inlineButton("ü¶∏‚Äç‚ôÇÔ∏è –ü–æ –∫–æ–º–∏–∫—Å–∞–º", {callback: '/hello'})
    ],
    [
        bot.inlineButton('üë∂ –î–ª—è –¥–µ—Ç–µ–π', {callback: '/hello'}),bot.inlineButton("üëºüèª –ú—É–ª—å—Ç—Ñ–∏–ª—å–º—ã", {callback: '/hello'})
    ],
    [
        bot.inlineButton('üî´ –ö–æ–º–º–µ–¥–∏–π–Ω—ã–µ –±–æ–µ–≤–∏–∫–∏', {callback: '/hello'}),bot.inlineButton("üë®‚Äçüë©‚Äçüë¶‚Äçüë¶ –°–µ–º–µ–π–Ω—ã–µ –∫–æ–º–µ–¥–∏–∏", {callback: '/hello'})
    ],
    [
        bot.inlineButton('‚¨ÖÔ∏è', {callback: '/minus'}),bot.inlineButton('‚û°Ô∏è', {callback: '/plus'})
    ],
],
[
    [
        bot.inlineButton('üì∫ –û—Ç–µ—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –Ω–æ–≤–æ–≥–æ–¥–Ω–∏–µ', {callback: '/hello'}),bot.inlineButton("üéÖ –ò–Ω–æ—Å—Ç—Ä–∞–Ω–Ω—ã–µ –Ω–æ–≤–æ–≥–æ–¥–Ω–∏–µ", {callback: '/hello'})
    ],
    [
        bot.inlineButton('üí• –û –≤–µ–ª–∏–∫–æ–π –æ—Ç–µ—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–π', {callback: '/hello'}),bot.inlineButton("ü™ê –ö–æ—Å–º–æ—Å", {callback: '/hello'})
    ],
    [
        bot.inlineButton('üë¶üèª –ü–æ–¥—Ä–æ—Å—Ç–∫–∏', {callback: '/hello'}),bot.inlineButton("üè´ –®–∫–æ–ª—ã", {callback: '/hello'})
    ],
    [
        bot.inlineButton('‚¨ÖÔ∏è', {callback: '/minus'})
    ],
]];
bot.on(['/start'], async msg => {
    console.log(msg);
    let user = await UserSchema.findOne({
        channelId:msg.from.id,
        userId:msg.chat.id
    });
    if(!user){
        user = new UserSchema({
        channelId:msg.from.id,
        userId:msg.chat.id
        })
    }
    user.save();
    const replyMarkup = bot.keyboard([
        [
            bot.button('üîé –ù–∞–π—Ç–∏ —Ñ–∏–ª—å–º'),bot.button('üéû –°–µ—Ä–∏–∞–ª—ã')
        ],
        [
            bot.button('ü¶Ñ –ú—É–ª—å—Ç—Ñ–∏–ª—å–º—ã'),bot.button('üÜï –ù–æ–≤–∏–Ω–∫–∏')
        ],
        [
            bot.button('üí´ –ö–æ–ª–ª–µ–∫—Ü–∏—è'),bot.button('üåü –ú–æ–∏ —Å–ø–∏—Å–∫–∏')
        ],
    ],{resize:true});
    return bot.sendMessage(msg.from.id, `–ü—Ä–∏–≤–µ—Ç, —è *–ß—É–∏ ‚Äî —Å–∞–º—ã–π –∫—Ä—É–ø–Ω—ã–π –±–æ—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞ —Ñ–∏–ª—å–º–æ–≤ –∏ —Å–µ—Ä–∏–∞–ª–æ–≤.*
–í –º–æ–µ–π –ø–∞–º—è—Ç–∏ —Å–æ–¥–µ—Ä–∂–∏—Ç—Å—è –±–æ–ª–µ–µ 850000 –∫–∞—Ä—Ç–∏–Ω, —Å–æ –º–Ω–æ–π –≤—ã –≤—Å–µ–≥–¥–∞ –Ω–∞–π–¥–µ—Ç–µ —á—Ç–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å!
@kinolug - c–∞–º—ã–µ –∫—Ä—É—Ç—ã–µ –ø–æ–¥–±–æ—Ä–∫–∏ —Ñ–∏–ª—å–º–æ–≤.`, {replyMarkup,parseMode:"Markdown"});
});
bot.on(["/plus"] , msg => {
    let number = pagginatorForCollection.get(msg.from.id);
    if(number >= 2) return;
    number++;
    pagginatorForCollection.set(msg.from.id,number);
    const replyMarkup = bot.inlineKeyboard(paginatorInformation[pagginatorForCollection.get(msg.from.id)]);
    return bot.sendMessage(msg.from.id, `*–ö–æ–ª–ª–µ–∫—Ü–∏—è —Ñ–∏–ª—å–º–æ–≤*
–î–ª—è –≤–∞—à–µ–≥–æ —É–¥–æ–±—Å—Ç–≤–∞, —è —Å–æ–±—Ä–∞–ª –ª—É—á—à–∏–µ —Ñ–∏–ª—å–º—ã –∏ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–∏–ª –∏—Ö –ø–æ —Ä—É–±—Ä–∏–∫–∞–º.
–ü—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∏ –≤—ã–±–∏—Ä–∞–π—Ç–µ —Ñ–∏–ª—å–º—ã –∏–∑ –≤—ã–ø–∞–¥–∞—é—â–µ–≥–æ —Å–ø–∏—Å–∫–∞ ü•∞.`, {replyMarkup,parseMode:"Markdown"}).then( mess => {
    if(previousBotMessage.has(mess.chat.id)) bot.deleteMessage(mess.chat.id,previousBotMessage.get(mess.chat.id));
    previousBotMessage.set(mess.chat.id,mess.message_id);
    
});
});
bot.on(["/minus"] , msg => {
    let number = pagginatorForCollection.get(msg.from.id);
    if(number <= 0) return;
    number--;
    pagginatorForCollection.set(msg.from.id,number);
    const replyMarkup = bot.inlineKeyboard(paginatorInformation[pagginatorForCollection.get(msg.from.id)]);
    return bot.sendMessage(msg.from.id, `*–ö–æ–ª–ª–µ–∫—Ü–∏—è —Ñ–∏–ª—å–º–æ–≤*
–î–ª—è –≤–∞—à–µ–≥–æ —É–¥–æ–±—Å—Ç–≤–∞, —è —Å–æ–±—Ä–∞–ª –ª—É—á—à–∏–µ —Ñ–∏–ª—å–º—ã –∏ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–∏–ª –∏—Ö –ø–æ —Ä—É–±—Ä–∏–∫–∞–º.
–ü—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∏ –≤—ã–±–∏—Ä–∞–π—Ç–µ —Ñ–∏–ª—å–º—ã –∏–∑ –≤—ã–ø–∞–¥–∞—é—â–µ–≥–æ —Å–ø–∏—Å–∫–∞ ü•∞.`, {replyMarkup,parseMode:"Markdown"}).then( mess => {
    if(previousBotMessage.has(mess.chat.id)) bot.deleteMessage(mess.chat.id,previousBotMessage.get(mess.chat.id));
    previousBotMessage.set(mess.chat.id,mess.message_id);
    
});
});
bot.on(["/filter"] , msg => {
    
    const replyMarkup = bot.inlineKeyboard([
        [
            bot.inlineButton('üåç –°—Ç—Ä–∞–Ω–∞', {inline:"#country "}),bot.inlineButton('üé≠ –ñ–∞–Ω—Ä', {inline:"#genre "}),bot.inlineButton('üë§ –ê–∫—Ç–µ—Ä', {inline:"#actor "})
        ],
        [
            bot.inlineButton('üì¢ –†–µ–∂–∏—Å—Å–µ—Ä', {inline:"#directors "}),bot.inlineButton('üìÜ –î–∞—Ç–∞ –≤—ã–ø—É—Å–∫–∞', {inline:"#release "})
        ],
        [
            bot.inlineButton('–û—á–∏—Å—Ç–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä', {callback: '/clear'})
        ],
    ]);
    return bot.sendMessage(msg.from.id, `–£–∫–∞–∂–∏—Ç–µ —É—Å–ª–æ–≤–∏—è –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞`, {replyMarkup,parseMode:"Markdown"}).then( mess => {
    if(previousBotMessage.has(mess.chat.id)) bot.deleteMessage(mess.chat.id,previousBotMessage.get(mess.chat.id));
    previousBotMessage.set(mess.chat.id,mess.message_id);
    
});
});
bot.on(['text'], msg => {
    //bot.deleteMessage(msg.chat.id, msg.message_id);
    if(msg.text === "üîé –ù–∞–π—Ç–∏ —Ñ–∏–ª—å–º"){
        const replyMarkup = bot.inlineKeyboard([
            [
                bot.inlineButton('üîé –ü–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é —Ñ–∏–ª—å–º–∞', {inlineCurrent:""})
            ],
            [
                bot.inlineButton('üîé –ö–∏–Ω–æ–ø–æ–∏—Å–∫', {callback: '/hello'}),bot.inlineButton('üîé IMDb', {callback: '/hello'})
            ],
            [
                bot.inlineButton('üéØ –§–∏–ª—å—Ç—Ä', {callback: '/filter'})
            ],
        ]);
        return bot.sendMessage(msg.from.id, `**–Ø –ø–æ–º–æ–≥—É –Ω–∞–π—Ç–∏ –≤–∞–º –Ω—É–∂–Ω—ã–π —Ñ–∏–ª—å–º üòâ

‚úÖ –í—ã–±–µ—Ä–∏—Ç–µ ¬´–ø–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é —Ñ–∏–ª—å–º–∞¬ª. 
–ü–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è, –Ω–∞—á–Ω–∏—Ç–µ –≤–≤–æ–¥–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ä—Ç–∏–Ω—ã.
        
üîù _–°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è –ø–æ –¥–∞—Ç–µ –≤—ã–ø—É—Å–∫–∞ –∫–∞—Ä—Ç–∏–Ω—ã._
        
‚úÖ _–î–ª—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ –ø–æ —Ä–µ–π—Ç–∏–Ω–≥—É –ö–∏–Ω–æ–ü–æ–∏—Å–∫–∞ –∏–ª–∏ IMDb,_ *–Ω–∞–∂–º–∏—Ç–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –∏ –Ω–∞—á–Ω–∏—Ç–µ –≤–≤–æ–¥–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞.*
–†–µ–π—Ç–∏–Ω–≥ –æ—Å–Ω–æ–≤–∞–Ω –Ω–∞ –æ—Ü–µ–Ω–∫–∞—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ö–∏–Ω–æ–ü–æ–∏—Å–∫–∞ –∏ IMDb.
–í —Å–ø–∏—Å–æ–∫ –≤—Ö–æ–¥—è—Ç —Ñ–∏–ª—å–º—ã –∏–º–µ—é—â–∏–µ –±–æ–ª–µ–µ 70000 –æ—Ü–µ–Ω–æ–∫.
        
‚úÖ *–ê –µ—â–µ —É –º–µ–Ω—è –µ—Å—Ç—å —á—É–¥–æ-—Ñ–∏–ª—å—Ç—Ä*
–° –µ–≥–æ –ø–æ–º–æ—â—å—é, –≤—ã —Å–º–æ–∂–µ—Ç–µ —Å—É–∑–∏—Ç—å –∫—Ä—É–≥ –ø–æ–∏—Å–∫–∞ –∏ –Ω–∞–π—Ç–∏ —Ç–æ, —á—Ç–æ –∏—Å–∫–∞–ª–∏. 
*–ù–∞–ø—Ä–∏–º–µ—Ä:* –í—ã –∑–Ω–∞–µ—Ç–µ —Ä–µ–∂–∏—Å—Å—ë—Ä–∞ –∏/–∏–ª–∏ –∂–∞–Ω—Ä, –≥–æ–¥ –≤—ã–ø—É—Å–∫–∞, —Å—Ç—Ä–∞–Ω—É, –∞–∫—Ç—ë—Ä–∞. 
–õ–∏–±–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –≤—ã–≤–µ—Å—Ç–∏ —Ñ–∏–ª—å–º—ã –ø–æ –∂–∞–Ω—Ä—É: *–∞–Ω–∏–º–µ, –±–æ–µ–≤–∏–∫–∏, –∫–æ–º–µ–¥–∏–∏.*
–§–∏–ª—å—Ç—Ä –≤—ã–≤–µ–¥–µ—Ç –≤—Å–µ —Ñ–∏–ª—å–º—ã, –æ–ø–∏—Ä–∞—è—Å—å –Ω–∞ –≤—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ.`, {replyMarkup, parseMode:"Markdown"}).then( mess => {
    if(previousBotMessage.has(mess.chat.id)) bot.deleteMessage(mess.chat.id,previousBotMessage.get(mess.chat.id));
    previousBotMessage.set(mess.chat.id,mess.message_id);
});
    }
    if(msg.text === "üéû –°–µ—Ä–∏–∞–ª—ã"){
        const replyMarkup = bot.inlineKeyboard([
            [
                bot.inlineButton('üçø NETFLIX', {callback: '/hello'}),bot.inlineButton("üçï HBO", {callback: '/hello'})
            ],
            [
                bot.inlineButton('üî• 250 –ª—É—á—à–∏—Ö —Å–µ—Ä–∏–∞–ª–æ–≤', {callback: '/hello'})
            ],
            [
                bot.inlineButton('üá∑üá∫ –†–æ—Å—Å–∏–π—Å–∫–∏–µ —Å–µ—Ä–∏–∞–ª—ã', {callback: '/hello'})
            ],
            [
                bot.inlineButton('üáØüáµ –ê–∑–∏–∞—Ç—Å–∫–∏–µ —Å–µ—Ä–∏–∞–ª—ã', {callback: '/hello'})
            ],
            [
                bot.inlineButton('üîé –ü–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é —Å–µ—Ä–∏–∞–ª–∞', {callback: '/hello'})
            ],
        ]);
        return bot.sendMessage(msg.from.id, `
        *–Ø –ø–æ–º–æ–≥—É –Ω–∞–π—Ç–∏ –≤–∞–º –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π —Å–µ—Ä–∏–∞–ª* üòâ

–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é —Å–µ—Ä–∏–∞–ª–∞, –ª–∏–±–æ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –Ω–∞—à–∏–º–∏ –ø–æ–¥–±–æ—Ä–∫–∞–º–∏.

üîù _–°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ —Å–µ—Ä–∏–∞–ª–æ–≤ –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è –ø–æ —Ä–µ–π—Ç–∏–Ω–≥—É –ö–∏–Ω–æ–ü–æ–∏—Å–∫–∞._`, {replyMarkup,parseMode:"Markdown"}).then( mess => {
    if(previousBotMessage.has(mess.chat.id)) bot.deleteMessage(mess.chat.id,previousBotMessage.get(mess.chat.id));
    previousBotMessage.set(mess.chat.id,mess.message_id);
});;
    }
    if(msg.text === "ü¶Ñ –ú—É–ª—å—Ç—Ñ–∏–ª—å–º—ã"){
        const replyMarkup = bot.inlineKeyboard([
            [
                bot.inlineButton('ü¶Ñ –ù–∞–π—Ç–∏ –º—É–ª—å—Ç—Ñ–∏–ª—å–º', {callback: '/hello'})
            ],
        ]);
        return bot.sendMessage(msg.from.id, `*–ù–∞–π–¥–∏ –ª—é–±–∏–º—ã–π –º—É–ª—å—Ç—Ñ–∏–ª—å–º*
–ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è:
üëâüèª –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É ¬´–ù–∞–π—Ç–∏ –º—É–ª—å—Ç—Ñ–∏–ª—å–º¬ª.
‚å®Ô∏è  –ù–∞—á–Ω–∏—Ç–µ –≤–≤–æ–¥–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ –º—É–ª—å—Ç—Ñ–∏–ª—å–º–∞, –Ω–∞–ø—Ä–∏–º–µ—Ä: #mult –¢–æ–º –∏ –î–∂–µ...
        
üîù _–°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è –ø–æ —Ä–µ–π—Ç–∏–Ω–≥—É –ö–∏–Ω–æ–ü–æ–∏—Å–∫–∞._`, {replyMarkup, parseMode:"Markdown"}).then( mess => {
    if(previousBotMessage.has(mess.chat.id)) bot.deleteMessage(mess.chat.id,previousBotMessage.get(mess.chat.id));
    previousBotMessage.set(mess.chat.id,mess.message_id);
});;
    }
    if(msg.text === "üÜï –ù–æ–≤–∏–Ω–∫–∏"){
        const replyMarkup = bot.inlineKeyboard([
            [
                bot.inlineButton('üëå –ü–æ–∫–∞–∑–∞—Ç—å —Ñ–∏–ª—å–º—ã', {callback: '/hello'})
            ],
        ]);
        return bot.sendMessage(msg.from.id, `*–õ—É—á—à–∏–µ —Ñ–∏–ª—å–º—ã, –≤—ã—à–µ–¥—à–∏–µ –≤ —Ä–æ—Å—Å–∏–π—Å–∫–∏–π –∫–∏–Ω–æ–ø—Ä–æ–∫–∞—Ç –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π –≥–æ–¥*

üîù _–°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è –ø–æ —Ä–µ–π—Ç–∏–Ω–≥—É –ö–∏–Ω–æ–ü–æ–∏—Å–∫–∞._`, {replyMarkup, parseMode:"Markdown"}).then( mess => {
    if(previousBotMessage.has(mess.chat.id)) bot.deleteMessage(mess.chat.id,previousBotMessage.get(mess.chat.id));
    previousBotMessage.set(mess.chat.id,mess.message_id);
});;
    }
    if(msg.text === "üí´ –ö–æ–ª–ª–µ–∫—Ü–∏—è"){
       
        pagginatorForCollection.set(msg.chat.id,0)
        const replyMarkup = bot.inlineKeyboard(paginatorInformation[pagginatorForCollection.get(msg.chat.id)]);
        return bot.sendMessage(msg.from.id, `*–ö–æ–ª–ª–µ–∫—Ü–∏—è —Ñ–∏–ª—å–º–æ–≤*
–î–ª—è –≤–∞—à–µ–≥–æ —É–¥–æ–±—Å—Ç–≤–∞, —è —Å–æ–±—Ä–∞–ª –ª—É—á—à–∏–µ —Ñ–∏–ª—å–º—ã –∏ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–∏–ª –∏—Ö –ø–æ —Ä—É–±—Ä–∏–∫–∞–º.
–ü—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∏ –≤—ã–±–∏—Ä–∞–π—Ç–µ —Ñ–∏–ª—å–º—ã –∏–∑ –≤—ã–ø–∞–¥–∞—é—â–µ–≥–æ —Å–ø–∏—Å–∫–∞ ü•∞.`, {replyMarkup,parseMode:"Markdown"}).then( mess => {
    if(previousBotMessage.has(mess.chat.id)) bot.deleteMessage(mess.chat.id,previousBotMessage.get(mess.chat.id));
    previousBotMessage.set(mess.chat.id,mess.message_id);
    
});
    }
    if(msg.text === "üåü –ú–æ–∏ —Å–ø–∏—Å–∫–∏"){
        const replyMarkup = bot.inlineKeyboard([
            [
                bot.inlineButton('üí´ –ë—É–¥—É —Å–º–æ—Ç—Ä–µ—Ç—å', {callback: '/hello'})
            ],
            [
                bot.inlineButton('‚úÖ –ú–æ–π —Å–ø–∏—Å–æ–∫', {callback: '/hello'})
            ],
            [
                bot.inlineButton('‚§¥Ô∏è–ü–æ–¥–µ–ª–∏—Ç—å—Å—è —Å–ø–∏—Å–∫–æ–º —Ñ–∏–ª—å–º–æ–≤', {callback: '/hello'})
            ],
        ]);
        return bot.sendMessage(msg.from.id, `*–ú–æ–∏ —Å–ø–∏—Å–∫–∏ —Ñ–∏–ª—å–º–æ–≤:*
- –°–ø–∏—Å–æ–∫ —Ñ–∏–ª—å–º–æ–≤ –æ–∂–∏–¥–∞—é—â–∏–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞;
- –ú–æ–π –∏–∑–±—Ä–∞–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫;
        
–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –ø–æ–¥–µ–ª–∏—Ç—å—Å—è —Å–ø–∏—Å–∫–æ–º –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö —Ñ–∏–ª—å–º–æ–≤, –Ω–∞–∂–º–∏—Ç–µ ¬´–ü–æ–¥–µ–ª–∏—Ç—å—Å—è —Å–ø–∏—Å–∫–æ–º —Ñ–∏–ª—å–º–æ–≤¬ª`, {replyMarkup, parseMode:"Markdown"}).then( mess => {
    if(previousBotMessage.has(mess.chat.id)) bot.deleteMessage(mess.chat.id,previousBotMessage.get(mess.chat.id));
    previousBotMessage.set(mess.chat.id,mess.message_id);
});
    }
});

bot.on('inlineQuery', async msg => {

    let query = msg.query;
    query = query.split(" ")
    console.log(query);
    // Create a new answer list object
    const opt = {
        cacheTime: 200,
        nextOffset:64,
        pmText: "–ü–µ—Ä–µ–π—Ç–∏ –≤ –±–æ—Ç–∞",
        pmParameter: "start"
    };
    const answers = bot.answerList(msg.id, opt);

    // Article
    if(query[0] === "#release")
    {
    answers.addArticle({
        id: '2027',
        title: '2027',
        message_text: ' wd',
    });
    answers.addArticle({
        id: '2026',
        title: '2026',
        message_text: 'wd',
    });
    return bot.answerQuery(answers);
    } else if(query[0] === "#genre"){
        let genres = await apiMovie.getGenresAndCountries();
        console.log(genres.genres);
            genres.genres.map( film => {
                answers.addArticle({
                    id: `g${film.id}`,
                    title: film.genre,
                    message_text: `–í—ã —É—Å—Ç–∞–Ω–æ–≤–∏–ª–∏ –≤ —Ñ–∏–ª—å—Ç—Ä–µ –∂–∞–Ω—Ä ${film.genre}`,
                });
            })
            bot.answerQuery(answers);
        
    } if(query[0] === "#country"){
        let countries = await apiMovie.getGenresAndCountries();
            countries.countries.map( film => {
                answers.addArticle({
                    id: `c${film.id}`,
                    title: film.country,
                    message_text: `–í—ã —É—Å—Ç–∞–Ω–æ–≤–∏–ª–∏ –≤ —Ñ–∏–ª—å—Ç—Ä–µ —Å—Ç—Ä–∞–Ω—É ${film.country}`,
                });
            });
            console.log(answers)
            bot.answerQuery(answers).catch(e => console.log(e));
        
    } else {
        apiMovie.searchFilm(query).then(async result => {
            result.films.sort((a,b) => b.year-a.year);
    result.films.map( async film => {
        if(film.rating === null) film.rating = 0;
        if(film.nameRu && film.type === "FILM")
        answers.addArticle({
            id:`${film.filmId}`,
            title: film.nameRu,
            message_text: `*–±–∏—á*`,
            thumb_url: film.posterUrlPreview,
            description: `${film.rating}`,
        });
    })
    bot.answerQuery(answers);
        })
    }
    //return bot.answerQuery(answers);

});
bot.on('chosenInlineResult', async (userQuery,msg) => {
    if(userQuery.result_id[0] === "g"){
       let userQueryCur =  userQuery.result_id.slice(1);
       let genres = await apiMovie.getGenresAndCountries();
       genres = await  genres.genres.find( find => find.id === parseInt(userQueryCur));
       filter.genre.genre = genres.genre;
       filter.genre.id = genres.id;
       messageSendFilter(userQuery.from.id);
    }
});

const descriptionGenerator = (filmId) => {
    return apiMovie.getInformation(filmId).then( result => {
    
    });
}
const messageSendFilter = (id) => {
    let message = "*–í–∞—à —Ñ–∏–ª—å—Ç—Ä*";
    if(filter.country.country != "" ) message += "\n*–°—Ç—Ä–∞–Ω–∞:*" + filter.country.country;
    if(filter.genre.genre != "" ) message += "\n*–ñ–∞–Ω—Ä:*" + filter.genre.genre;
    if(filter.actor != "" ) message += "\n*–ê–∫—Ç–µ—Ä:*" + filter.actor;
    if(filter.director != "" ) message += "\n*–†–µ–∂–∏—Å—Å–µ—Ä:*" + filter.director;
    if(filter.release != "" ) message += "\n*–î–∞—Ç–∞ –≤—ã–ø—É—Å–∫–∞:*" + filter.release;
    const replyMarkup = bot.inlineKeyboard([
        [
            bot.inlineButton('üåç –°—Ç—Ä–∞–Ω–∞', {inline:"#country "}),bot.inlineButton('üé≠ –ñ–∞–Ω—Ä', {inline:"#genre "}),bot.inlineButton('üë§ –ê–∫—Ç–µ—Ä', {inline:"#actor "})
        ],
        [
            bot.inlineButton('üì¢ –†–µ–∂–∏—Å—Å–µ—Ä', {inline:"#directors "}),bot.inlineButton('üìÜ –î–∞—Ç–∞ –≤—ã–ø—É—Å–∫–∞', {inline:"#release "})
        ],
        [
            bot.inlineButton('–û—á–∏—Å—Ç–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä', {callback: '/clear'})
        ],
        [
            bot.inlineButton('–û—Ç–æ–±—Ä–∞–∑–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã', {inlineCurrent: '#result '})
        ],
    ]);
    bot.sendMessage(id,message,{replyMarkup,parseMode:"Markdown"}).then( mess => {
        if(previousBotMessage.has(mess.chat.id)) bot.deleteMessage(mess.chat.id,previousBotMessage.get(mess.chat.id));
        previousBotMessage.set(mess.chat.id,mess.message_id);
    });
}
bot.start();